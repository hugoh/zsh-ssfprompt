# vim:ft=zsh

prompt_ssfprompt_help() {
  echo "Slim, simple, fast prompt -- https://gitlab.com/hugoh/zsh-ssfprompt"
  # shellcheck disable=SC2028
  echo "\nCurrent status:"
  prompt_ssfprompt_help_status
}

prompt_ssfprompt_setup() {
  # Prompt options for promptinit
  # shellcheck disable=SC2034
  prompt_opts=(cr percent subst)

  # Setup
  prompt_ssfprompt_setup_PROMPT
  prompt_ssfprompt_setup_RPROMPT

  # zstyle ':prompt:ssfprompt' vi-mode off
  if prompt_ssfprompt_vimode_is_enabled; then
    prompt_ssfprompt_setup_vimode
  fi
}

prompt_ssfprompt_setup_PROMPT() {
  # Simple, lean PROMPT
  # shellcheck disable=SC2016,SC2034
  PROMPT='%B${SSH_CONNECTION:+"%F{blue}%n%F{yellow}@%F{red}%m "}%F{cyan}%(!.%1~.%~)%F{yellow} %F{yellow}%#%f%b '
}

prompt_ssfprompt_setup_RPROMPT() {
  _ssfprompt_BASE_RPROMPT=''
  RPROMPT=$_ssfprompt_BASE_RPROMPT

  # VCS info on RPROMPT
  # Set asynchronously by default
  autoload -Uz add-zsh-hook
  if async 2>/dev/null; then
    add-zsh-hook precmd prompt_ssfprompt_async_precmd
  else
    # shellcheck disable=SC2016
    RPROMPT+='$(prompt_ssfprompt_vcs_status)'
  fi

}

prompt_ssfprompt_vimode_is_enabled() {
  local _ssfprompt_vimode
  if ! zstyle -s ':prompt:ssfprompt' vi-mode _ssfprompt_vimode || [[ "$_ssfprompt_vimode" != (off|false|no|0) ]]; then
    return 0
  else
    return 1
  fi
}

prompt_ssfprompt_setup_vimode() {
  function zle-keymap-select() { prompt_ssfprompt_vi_keymap_select }
  zle -N zle-keymap-select
}

prompt_ssfprompt_help_status() {
  # shellcheck disable=SC2154
  if [[ ${prompt_theme[1]} != "ssfprompt" ]]; then
    echo "ssfprompt not loaded"
    return 1
  else
    echo "ssfprompt loaded"
    # shellcheck disable=SC2154
    if [[ ${precmd_functions[(I)prompt_ssfprompt_async_precmd]} -gt 0 ]]; then
      echo "  async"
    else
      echo "  sync"
    fi
    if prompt_ssfprompt_vimode_is_enabled; then
      echo "  vi-mode on"
    else
      echo "  vi-mode off"
    fi
  fi
}

#
# VCS status function (using posh-git-sh; can be overriden)
#

prompt_ssfprompt_vcs_status() {
  __posh_git_echo
}

#
# Asynchronous vcs_info thanks to mafredri/zsh-async
#

prompt_ssfprompt_async_precmd() {
  RPROMPT=$_ssfprompt_BASE_RPROMPT
  # Get vcs_info using the worker; will be updated via the callback
  async_start_worker "prompt_ssfprompt_worker"
  async_register_callback "prompt_ssfprompt_worker" prompt_ssfprompt_async_rprompt_render
  async_job "prompt_ssfprompt_worker" prompt_ssfprompt_async_vcs_info "$PWD"
}

prompt_ssfprompt_async_vcs_info() {
  # Return VCS information for current directory
  cd "$1" || return 1
  prompt_ssfprompt_vcs_status
}

prompt_ssfprompt_async_rprompt_render() {
  # Update RPROMPT with the VCS info just received
  local output="$3"
  if [[ -n "$output" ]]; then
    RPROMPT+="$output"
    # Refresh prompt
    zle && zle reset-prompt
  fi
  async_stop_worker "prompt_ssfprompt_worker"
}

#
# Vim mode indicator
#

prompt_ssfprompt_vi_keymap_select_rprompt() {
  local INDICATOR="%F{blue}[N]%f "
  if [[ $KEYMAP == vicmd ]]; then
    if [[ $RPROMPT != "$INDICATOR"* ]]; then
      RPROMPT="$INDICATOR$RPROMPT"
    fi
  else
    if [[ $RPROMPT == "$INDICATOR"* ]]; then
      RPROMPT="${RPROMPT#$INDICATOR}"
    fi
  fi
}

prompt_ssfprompt_vi_keymap_select_cursor() {
  local -A _ssfprompt_cursor_seq=(
    [block]=$'\e[1 q'
    [caret]=$'\e[5 q'
  )
  if [[ $KEYMAP == vicmd ]]; then
    echo -ne "${_ssfprompt_cursor_seq[block]}"
  elif [[ $KEYMAP == viins ]]; then
    echo -ne "${_ssfprompt_cursor_seq[caret]}"
  fi
}

prompt_ssfprompt_vi_keymap_select() {
  prompt_ssfprompt_vi_keymap_select_cursor
  prompt_ssfprompt_vi_keymap_select_rprompt
  zle reset-prompt
}

prompt_ssfprompt_setup "$@"
