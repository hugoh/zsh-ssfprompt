# vim:ft=zsh

prompt_ssfprompt_help() {
  echo "Slim, simple, fast prompt -- https://gitlab.com/hugoh/zsh-ssfprompt"
  echo "\nCurrent status:"
  prompt_ssfprompt_help_status
}

prompt_ssfprompt_setup() {
  # Prompt options for promptinit
  prompt_opts=(bang cr percent subst)

  # Setup
  setopt prompt_subst noprompt_bang
  prompt_ssfprompt_setup_PROMPT
  prompt_ssfprompt_setup_RPROMPT
}

prompt_ssfprompt_setup_PROMPT() {
  # Simple, lean PROMPT
  PROMPT='%B${SSH_CONNECTION:+"%F{blue}%n%F{yellow}@%F{red}%m "}%F{cyan}%(!.%1~.%~)%F{yellow} %F{yellow}%#%f%b '
}

prompt_ssfprompt_setup_RPROMPT() {
  # VCS info on RPROMPT
  _ssfprompt_RPROMPT='%(?..%F{red}%?â†µ%f)'
  RPROMPT=$_ssfprompt_RPROMPT

  # Set asynchronously by default
  autoload -Uz add-zsh-hook
  if async_init 2>/dev/null; then
    add-zsh-hook precmd prompt_ssfprompt_async_precmd
  else
    RPROMPT+='$(prompt_ssfprompt_vcs_status)'
  fi
}

prompt_ssfprompt_help_status() {
  if [[ $prompt_theme[1] != "ssfprompt" ]]; then
    echo "ssfprompt not loaded"
    return 1
  else
    echo "ssfprompt loaded"
    if [[ ${precmd_functions[(I)prompt_ssfprompt_async_precmd]} > 0 ]]; then
      echo "  async"
    else
      echo "  sync"
    fi
  fi
}

#
# VCS status function (using posh-git-sh; can be overriden)
#

prompt_ssfprompt_vcs_status() {
  __posh_git_echo
}

#
# Asynchronous vcs_info thanks to mafredri/zsh-async
#

prompt_ssfprompt_async_precmd() {
  RPROMPT=$_ssfprompt_RPROMPT
  # Get vcs_info using the worker; will be updated via the callback
  async_start_worker "prompt_ssfprompt_worker"
  async_register_callback "prompt_ssfprompt_worker" prompt_ssfprompt_async_rprompt_render
  async_job "prompt_ssfprompt_worker" prompt_ssfprompt_async_vcs_info "$PWD"
}

prompt_ssfprompt_async_vcs_info() {
  # Return VCS information for current directory
  cd "$1" || return 1
  prompt_ssfprompt_vcs_status
}

prompt_ssfprompt_async_rprompt_render() {
  # Update RPROMPT with the VCS info just received
  local output="$3"
  if [[ -n "$output" ]]; then
    RPROMPT+="$output"
    # Refresh prompt
    zle && zle reset-prompt
  fi
  async_stop_worker "prompt_ssfprompt_worker"
}

prompt_ssfprompt_setup "$@"
